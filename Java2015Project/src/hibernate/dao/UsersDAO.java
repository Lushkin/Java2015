package hibernate.dao;


import java.util.Date;
import java.util.List;

import net.sf.hibernate.Hibernate;
import net.sf.hibernate.HibernateException;
import net.sf.hibernate.Session;
import net.sf.hibernate.Transaction;
import hibernate.HibernateUtil;
import hibernate.Users;
import hibernate.base.BaseUsersDAO;

/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is the object class that relates to the Users table.
 * Any customizations belong here.
 */
public class UsersDAO extends BaseUsersDAO {
	
	public Users Authenticate(String email, String password)
	{
		Session session;
		try
		{
			session = HibernateUtil.currentSession();
			List<Users> user = session.find("from Users WHERE Email = '" + email + "' AND Password = '" + password + "'");
			HibernateUtil.closeSession();
			
			if(user != null && user.size() > 0)
			{
				return user.get(0);
			}
			else
			{
				return null;
			}
		} 
		catch (HibernateException e)
		{
			return null;
		}
	}
	
	public void CreateUser(String nom, String prenom, String email, Date datenaissance, String password, int role)
	{
		Users user = new Users();
		user.setFirstName(prenom);
		user.setLastName(nom);
		user.setEmail(email);
		user.setPassword(password);
		user.setBirthDate(datenaissance);
		user.setRole(role);
		
		try
		{
			Transaction transac = HibernateUtil.currentSession().beginTransaction();
			HibernateUtil.currentSession().saveOrUpdate(user);
			transac.commit();
		} catch (HibernateException e)
		{
			System.out.println("Erreur dans CreateUser DAO");
		}
	}
	
	public List<Users> GetTeachers()
	{
		Session session;
		try
		{
			session = HibernateUtil.currentSession();
			List<Users> teachers = session.find("from Users WHERE Role = 2");
			HibernateUtil.closeSession();
			
			return teachers;
		} 
		catch (HibernateException e)
		{
			return null;
		}
	}
	
	public List<Users> GetStudents()
	{
		Session session;
		try
		{
			session = HibernateUtil.currentSession();
			List<Users> students = session.find("from Users WHERE Role = 3");
			HibernateUtil.closeSession();
			
			return students;
		} 
		catch (HibernateException e)
		{
			return null;
		}
	}
}