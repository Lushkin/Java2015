package hibernate.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the Questions table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="Questions"
 */
public abstract class BaseQuestions  implements Serializable {

	public static String PROP_CATEGORY = "Category";
	public static String PROP_ID = "Id";
	public static String PROP_CONTENT = "Content";
	public static String PROP_PONDERATION = "Ponderation";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private java.lang.String _content;
	private java.math.BigDecimal _ponderation;

	// many to one
	private hibernate.Categories _category;

	// collections
	private java.util.Set _questionAnswersSet;
	private java.util.Set _userQuestionsSet;


	// constructors
	public BaseQuestions () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseQuestions (java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseQuestions (
		java.lang.Integer _id,
		hibernate.Categories _category,
		java.lang.String _content,
		java.math.BigDecimal _ponderation) {

		this.setId(_id);
		this.setCategory(_category);
		this.setContent(_content);
		this.setPonderation(_ponderation);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="native"
     *  column="Id"
     */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: Content
	 */
	public java.lang.String getContent () {
		return _content;
	}

	/**
	 * Set the value related to the column: Content
	 * @param _content the Content value
	 */
	public void setContent (java.lang.String _content) {
		this._content = _content;
	}


	/**
	 * Return the value associated with the column: Ponderation
	 */
	public java.math.BigDecimal getPonderation () {
		return _ponderation;
	}

	/**
	 * Set the value related to the column: Ponderation
	 * @param _ponderation the Ponderation value
	 */
	public void setPonderation (java.math.BigDecimal _ponderation) {
		this._ponderation = _ponderation;
	}


	/**
     * @hibernate.property
     *  column=CategoryId
	 * not-null=true
	 */
	public hibernate.Categories getCategory () {
		return this._category;
	}

	/**
	 * Set the value related to the column: CategoryId
	 * @param _category the CategoryId value
	 */
	public void setCategory (hibernate.Categories _category) {
		this._category = _category;
	}


	/**
	 * Return the value associated with the column: QuestionAnswersSet
	 */
	public java.util.Set getQuestionAnswersSet () {
		return this._questionAnswersSet;
	}

	/**
	 * Set the value related to the column: QuestionAnswersSet
	 * @param _questionAnswersSet the QuestionAnswersSet value
	 */
	public void setQuestionAnswersSet (java.util.Set _questionAnswersSet) {
		this._questionAnswersSet = _questionAnswersSet;
	}
	
	public void addToQuestionAnswersSet (Object obj) {
		if (null == this._questionAnswersSet) this._questionAnswersSet = new java.util.HashSet();
		this._questionAnswersSet.add(obj);
	}



	/**
	 * Return the value associated with the column: UserQuestionsSet
	 */
	public java.util.Set getUserQuestionsSet () {
		return this._userQuestionsSet;
	}

	/**
	 * Set the value related to the column: UserQuestionsSet
	 * @param _userQuestionsSet the UserQuestionsSet value
	 */
	public void setUserQuestionsSet (java.util.Set _userQuestionsSet) {
		this._userQuestionsSet = _userQuestionsSet;
	}
	
	public void addToUserQuestionsSet (Object obj) {
		if (null == this._userQuestionsSet) this._userQuestionsSet = new java.util.HashSet();
		this._userQuestionsSet.add(obj);
	}



	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof hibernate.base.BaseQuestions)) return false;
		else {
			hibernate.base.BaseQuestions mObj = (hibernate.base.BaseQuestions) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}