package hibernate.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the Tests table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="Tests"
 */
public abstract class BaseTests  implements Serializable {

	public static String PROP_IS_VALIDATED = "IsValidated";
	public static String PROP_END_DATE = "EndDate";
	public static String PROP_START_DATE = "StartDate";
	public static String PROP_SUBJECT = "Subject";
	public static String PROP_DURATION = "Duration";
	public static String PROP_AUTHOR = "Author";
	public static String PROP_ID = "Id";
	public static String PROP_TITLE = "Title";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private boolean _isValidated;
	private java.util.Date _endDate;
	private java.util.Date _startDate;
	private java.lang.Integer _duration;
	private java.lang.String _title;

	// many to one
	private hibernate.Users _author;
	private hibernate.Subjects _subject;

	// collections
	private java.util.Set _studentAnswersSet;
	private java.util.Set _userTestsSet;


	// constructors
	public BaseTests () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseTests (java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseTests (
		java.lang.Integer _id,
		hibernate.Users _author,
		hibernate.Subjects _subject,
		boolean _isValidated,
		java.util.Date _endDate,
		java.util.Date _startDate,
		java.lang.String _title) {

		this.setId(_id);
		this.setAuthor(_author);
		this.setSubject(_subject);
		this.setIsValidated(_isValidated);
		this.setEndDate(_endDate);
		this.setStartDate(_startDate);
		this.setTitle(_title);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="native"
     *  column="Id"
     */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: IsValidated
	 */
	public boolean isIsValidated () {
		return _isValidated;
	}

	/**
	 * Set the value related to the column: IsValidated
	 * @param _isValidated the IsValidated value
	 */
	public void setIsValidated (boolean _isValidated) {
		this._isValidated = _isValidated;
	}


	/**
	 * Return the value associated with the column: EndDate
	 */
	public java.util.Date getEndDate () {
		return _endDate;
	}

	/**
	 * Set the value related to the column: EndDate
	 * @param _endDate the EndDate value
	 */
	public void setEndDate (java.util.Date _endDate) {
		this._endDate = _endDate;
	}


	/**
	 * Return the value associated with the column: StartDate
	 */
	public java.util.Date getStartDate () {
		return _startDate;
	}

	/**
	 * Set the value related to the column: StartDate
	 * @param _startDate the StartDate value
	 */
	public void setStartDate (java.util.Date _startDate) {
		this._startDate = _startDate;
	}


	/**
	 * Return the value associated with the column: Duration
	 */
	public java.lang.Integer getDuration () {
		return _duration;
	}

	/**
	 * Set the value related to the column: Duration
	 * @param _duration the Duration value
	 */
	public void setDuration (java.lang.Integer _duration) {
		this._duration = _duration;
	}


	/**
	 * Return the value associated with the column: Title
	 */
	public java.lang.String getTitle () {
		return _title;
	}

	/**
	 * Set the value related to the column: Title
	 * @param _title the Title value
	 */
	public void setTitle (java.lang.String _title) {
		this._title = _title;
	}


	/**
     * @hibernate.property
     *  column=AuthorId
	 * not-null=true
	 */
	public hibernate.Users getAuthor () {
		return this._author;
	}

	/**
	 * Set the value related to the column: AuthorId
	 * @param _author the AuthorId value
	 */
	public void setAuthor (hibernate.Users _author) {
		this._author = _author;
	}


	/**
     * @hibernate.property
     *  column=SubjectId
	 * not-null=true
	 */
	public hibernate.Subjects getSubject () {
		return this._subject;
	}

	/**
	 * Set the value related to the column: SubjectId
	 * @param _subject the SubjectId value
	 */
	public void setSubject (hibernate.Subjects _subject) {
		this._subject = _subject;
	}


	/**
	 * Return the value associated with the column: StudentAnswersSet
	 */
	public java.util.Set getStudentAnswersSet () {
		return this._studentAnswersSet;
	}

	/**
	 * Set the value related to the column: StudentAnswersSet
	 * @param _studentAnswersSet the StudentAnswersSet value
	 */
	public void setStudentAnswersSet (java.util.Set _studentAnswersSet) {
		this._studentAnswersSet = _studentAnswersSet;
	}
	
	public void addToStudentAnswersSet (Object obj) {
		if (null == this._studentAnswersSet) this._studentAnswersSet = new java.util.HashSet();
		this._studentAnswersSet.add(obj);
	}



	/**
	 * Return the value associated with the column: UserTestsSet
	 */
	public java.util.Set getUserTestsSet () {
		return this._userTestsSet;
	}

	/**
	 * Set the value related to the column: UserTestsSet
	 * @param _userTestsSet the UserTestsSet value
	 */
	public void setUserTestsSet (java.util.Set _userTestsSet) {
		this._userTestsSet = _userTestsSet;
	}
	
	public void addToUserTestsSet (Object obj) {
		if (null == this._userTestsSet) this._userTestsSet = new java.util.HashSet();
		this._userTestsSet.add(obj);
	}



	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof hibernate.base.BaseTests)) return false;
		else {
			hibernate.base.BaseTests mObj = (hibernate.base.BaseTests) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}