package hibernate.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the StudentAnswers table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="StudentAnswers"
 */
public abstract class BaseStudentAnswers  implements Serializable {

	public static String PROP_STUDENT = "Student";
	public static String PROP_TEST = "Test";
	public static String PROP_ANSWER = "Answer";
	public static String PROP_IS_CHECKED = "IsChecked";
	public static String PROP_ID = "Id";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private boolean _isChecked;

	// many to one
	private hibernate.Users _student;
	private hibernate.Tests _test;
	private hibernate.Answers _answer;


	// constructors
	public BaseStudentAnswers () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseStudentAnswers (java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseStudentAnswers (
		java.lang.Integer _id,
		hibernate.Users _student,
		hibernate.Tests _test,
		hibernate.Answers _answer,
		boolean _isChecked) {

		this.setId(_id);
		this.setStudent(_student);
		this.setTest(_test);
		this.setAnswer(_answer);
		this.setIsChecked(_isChecked);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="native"
     *  column="Id"
     */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: IsChecked
	 */
	public boolean isIsChecked () {
		return _isChecked;
	}

	/**
	 * Set the value related to the column: IsChecked
	 * @param _isChecked the IsChecked value
	 */
	public void setIsChecked (boolean _isChecked) {
		this._isChecked = _isChecked;
	}


	/**
     * @hibernate.property
     *  column=StudentId
	 * not-null=true
	 */
	public hibernate.Users getStudent () {
		return this._student;
	}

	/**
	 * Set the value related to the column: StudentId
	 * @param _student the StudentId value
	 */
	public void setStudent (hibernate.Users _student) {
		this._student = _student;
	}


	/**
     * @hibernate.property
     *  column=TestId
	 * not-null=true
	 */
	public hibernate.Tests getTest () {
		return this._test;
	}

	/**
	 * Set the value related to the column: TestId
	 * @param _test the TestId value
	 */
	public void setTest (hibernate.Tests _test) {
		this._test = _test;
	}


	/**
     * @hibernate.property
     *  column=AnswerId
	 * not-null=true
	 */
	public hibernate.Answers getAnswer () {
		return this._answer;
	}

	/**
	 * Set the value related to the column: AnswerId
	 * @param _answer the AnswerId value
	 */
	public void setAnswer (hibernate.Answers _answer) {
		this._answer = _answer;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof hibernate.base.BaseStudentAnswers)) return false;
		else {
			hibernate.base.BaseStudentAnswers mObj = (hibernate.base.BaseStudentAnswers) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}